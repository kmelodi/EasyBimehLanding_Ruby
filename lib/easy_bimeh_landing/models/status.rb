# easy_bimeh_landing
#
# This file was automatically generated by APIMATIC
# v2.0 ( https://apimatic.io ).

module EasyBimehLanding
  # Status Model.
  class Status < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :entity_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :primary_entity_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status_collection_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :form_data

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status_title

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :editable

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status_collection_parent_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['entity_id'] = 'entityId'
      @_hash['primary_entity_name'] = 'primaryEntityName'
      @_hash['status_collection_id'] = 'statusCollectionId'
      @_hash['form_data'] = 'formData'
      @_hash['status_title'] = 'statusTitle'
      @_hash['editable'] = 'editable'
      @_hash['status_collection_parent_id'] = 'statusCollectionParentId'
      @_hash
    end

    def initialize(id = nil,
                   entity_id = nil,
                   primary_entity_name = nil,
                   status_collection_id = nil,
                   editable = nil,
                   form_data = nil,
                   status_title = nil,
                   status_collection_parent_id = nil)
      @id = id
      @entity_id = entity_id
      @primary_entity_name = primary_entity_name
      @status_collection_id = status_collection_id
      @form_data = form_data
      @status_title = status_title
      @editable = editable
      @status_collection_parent_id = status_collection_parent_id
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash['id']
      entity_id = hash['entityId']
      primary_entity_name = hash['primaryEntityName']
      status_collection_id = hash['statusCollectionId']
      editable = hash['editable']
      form_data = hash['formData']
      status_title = hash['statusTitle']
      status_collection_parent_id = hash['statusCollectionParentId']

      # Create object from extracted values.
      Status.new(id,
                 entity_id,
                 primary_entity_name,
                 status_collection_id,
                 editable,
                 form_data,
                 status_title,
                 status_collection_parent_id)
    end
  end
end
