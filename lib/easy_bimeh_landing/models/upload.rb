# easy_bimeh_landing
#
# This file was automatically generated by APIMATIC
# v2.0 ( https://apimatic.io ).

module EasyBimehLanding
  # اطلاعات فایل آپلود شده
  class Upload < BaseModel
    # شناسه ی فایل
    # @return [Integer]
    attr_accessor :id

    # شناسه ی دایرکتوری فایل
    # @return [Integer]
    attr_accessor :meta_media_directory_id

    # عنوان
    # @return [String]
    attr_accessor :title

    # توضیح فایل
    # @return [String]
    attr_accessor :alt

    # نام فایل
    # @return [String]
    attr_accessor :file_name

    # پسورد فایل
    # @return [String]
    attr_accessor :password_hash

    # وضعیت اکتیو بودن فایل
    # @return [String]
    attr_accessor :is_active

    # زمان انقضای فایل
    # @return [String]
    attr_accessor :expire_on

    # لیبل دسته بندی فایل
    # @return [String]
    attr_accessor :file_library_label_param

    # اندازه ی فایل
    # @return [String]
    attr_accessor :file_size

    # اندازه ی فایل
    # @return [String]
    attr_accessor :file_size_value

    # آدرس فایل
    # @return [String]
    attr_accessor :file_url

    # آدرس پیش نمایش فایل
    # @return [String]
    attr_accessor :file_thumbnail_url

    # تاریخ انقضای شمسی
    # @return [String]
    attr_accessor :expire_on_persian_date

    # تاریخ بروز رسانی فایل
    # @return [String]
    attr_accessor :update_on

    # تاریخ ثبت فایل
    # @return [String]
    attr_accessor :create_on

    # تاریخ ثبت فایل شمسی
    # @return [String]
    attr_accessor :create_on_persian_date

    # تاریخ بروز رسانی فایل شمسی
    # @return [String]
    attr_accessor :update_on_persian_date

    # آدرس دایرکتوری فایل
    # @return [String]
    attr_accessor :file_path

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['meta_media_directory_id'] = 'metaMediaDirectoryId'
      @_hash['title'] = 'title'
      @_hash['alt'] = 'alt'
      @_hash['file_name'] = 'fileName'
      @_hash['password_hash'] = 'passwordHash'
      @_hash['is_active'] = 'isActive'
      @_hash['expire_on'] = 'expireOn'
      @_hash['file_library_label_param'] = 'fileLibraryLabelParam'
      @_hash['file_size'] = 'fileSize'
      @_hash['file_size_value'] = 'fileSizeValue'
      @_hash['file_url'] = 'fileUrl'
      @_hash['file_thumbnail_url'] = 'fileThumbnailUrl'
      @_hash['expire_on_persian_date'] = 'expireOnPersianDate'
      @_hash['update_on'] = 'updateOn'
      @_hash['create_on'] = 'createOn'
      @_hash['create_on_persian_date'] = 'createOnPersianDate'
      @_hash['update_on_persian_date'] = 'updateOnPersianDate'
      @_hash['file_path'] = 'filePath'
      @_hash
    end

    def initialize(id = nil,
                   meta_media_directory_id = nil,
                   file_name = nil,
                   file_size_value = nil,
                   file_url = nil,
                   file_thumbnail_url = nil,
                   expire_on_persian_date = nil,
                   update_on = nil,
                   create_on = nil,
                   create_on_persian_date = nil,
                   update_on_persian_date = nil,
                   file_path = nil,
                   title = nil,
                   alt = nil,
                   password_hash = nil,
                   is_active = nil,
                   expire_on = nil,
                   file_library_label_param = nil,
                   file_size = nil)
      @id = id
      @meta_media_directory_id = meta_media_directory_id
      @title = title
      @alt = alt
      @file_name = file_name
      @password_hash = password_hash
      @is_active = is_active
      @expire_on = expire_on
      @file_library_label_param = file_library_label_param
      @file_size = file_size
      @file_size_value = file_size_value
      @file_url = file_url
      @file_thumbnail_url = file_thumbnail_url
      @expire_on_persian_date = expire_on_persian_date
      @update_on = update_on
      @create_on = create_on
      @create_on_persian_date = create_on_persian_date
      @update_on_persian_date = update_on_persian_date
      @file_path = file_path
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash['id']
      meta_media_directory_id = hash['metaMediaDirectoryId']
      file_name = hash['fileName']
      file_size_value = hash['fileSizeValue']
      file_url = hash['fileUrl']
      file_thumbnail_url = hash['fileThumbnailUrl']
      expire_on_persian_date = hash['expireOnPersianDate']
      update_on = hash['updateOn']
      create_on = hash['createOn']
      create_on_persian_date = hash['createOnPersianDate']
      update_on_persian_date = hash['updateOnPersianDate']
      file_path = hash['filePath']
      title = hash['title']
      alt = hash['alt']
      password_hash = hash['passwordHash']
      is_active = hash['isActive']
      expire_on = hash['expireOn']
      file_library_label_param = hash['fileLibraryLabelParam']
      file_size = hash['fileSize']

      # Create object from extracted values.
      Upload.new(id,
                 meta_media_directory_id,
                 file_name,
                 file_size_value,
                 file_url,
                 file_thumbnail_url,
                 expire_on_persian_date,
                 update_on,
                 create_on,
                 create_on_persian_date,
                 update_on_persian_date,
                 file_path,
                 title,
                 alt,
                 password_hash,
                 is_active,
                 expire_on,
                 file_library_label_param,
                 file_size)
    end
  end
end
