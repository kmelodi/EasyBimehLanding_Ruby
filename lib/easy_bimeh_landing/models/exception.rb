# easy_bimeh_landing
#
# This file was automatically generated by APIMATIC
# v2.0 ( https://apimatic.io ).

module EasyBimehLanding
  # با توجه به API ممکن از تغییر کند
  class Exception < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :date_time

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :message

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :help_link

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :source

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :stack_trace

    # TODO: Write general description for this method
    # @return [TargetSite]
    attr_accessor :target_site

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :error_line

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :exception_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :exception_url

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :inner_exception

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['date_time'] = 'dateTime'
      @_hash['message'] = 'message'
      @_hash['help_link'] = 'helpLink'
      @_hash['source'] = 'source'
      @_hash['stack_trace'] = 'stackTrace'
      @_hash['target_site'] = 'targetSite'
      @_hash['error_line'] = 'errorLine'
      @_hash['exception_type'] = 'exceptionType'
      @_hash['exception_url'] = 'exceptionUrl'
      @_hash['inner_exception'] = 'innerException'
      @_hash
    end

    def initialize(date_time = nil,
                   message = nil,
                   source = nil,
                   stack_trace = nil,
                   target_site = nil,
                   exception_type = nil,
                   help_link = nil,
                   error_line = nil,
                   exception_url = nil,
                   inner_exception = nil)
      @date_time = date_time
      @message = message
      @help_link = help_link
      @source = source
      @stack_trace = stack_trace
      @target_site = target_site
      @error_line = error_line
      @exception_type = exception_type
      @exception_url = exception_url
      @inner_exception = inner_exception
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      date_time = hash['dateTime']
      message = hash['message']
      source = hash['source']
      stack_trace = hash['stackTrace']
      target_site = TargetSite.from_hash(hash['targetSite']) if
        hash['targetSite']
      exception_type = hash['exceptionType']
      help_link = hash['helpLink']
      error_line = hash['errorLine']
      exception_url = hash['exceptionUrl']
      inner_exception = hash['innerException']

      # Create object from extracted values.
      Exception.new(date_time,
                    message,
                    source,
                    stack_trace,
                    target_site,
                    exception_type,
                    help_link,
                    error_line,
                    exception_url,
                    inner_exception)
    end
  end
end
