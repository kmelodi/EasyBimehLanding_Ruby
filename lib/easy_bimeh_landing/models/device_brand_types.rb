# easy_bimeh_landing
#
# This file was automatically generated by APIMATIC
# v2.0 ( https://apimatic.io ).

module EasyBimehLanding
  # DeviceBrandTypes Model.
  class DeviceBrandTypes < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :title

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :device_group

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :device_type_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :device_brand_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :create_on

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :update_on

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :created_by

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :updated_by

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :create_on_persian_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :update_on_persian_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :device_type_title

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :device_brand_title

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :device_type_brand_model_title

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :device_brand_ids

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :device_brands_title

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['title'] = 'title'
      @_hash['device_group'] = 'deviceGroup'
      @_hash['device_type_id'] = 'deviceTypeId'
      @_hash['device_brand_id'] = 'deviceBrandId'
      @_hash['create_on'] = 'createOn'
      @_hash['update_on'] = 'updateOn'
      @_hash['created_by'] = 'createdBy'
      @_hash['updated_by'] = 'updatedBy'
      @_hash['create_on_persian_date'] = 'createOnPersianDate'
      @_hash['update_on_persian_date'] = 'updateOnPersianDate'
      @_hash['device_type_title'] = 'deviceTypeTitle'
      @_hash['device_brand_title'] = 'deviceBrandTitle'
      @_hash['device_type_brand_model_title'] = 'deviceTypeBrandModelTitle'
      @_hash['device_brand_ids'] = 'deviceBrandIds'
      @_hash['device_brands_title'] = 'deviceBrandsTitle'
      @_hash
    end

    def initialize(id = nil,
                   title = nil,
                   device_group = nil,
                   create_on = nil,
                   update_on = nil,
                   created_by = nil,
                   create_on_persian_date = nil,
                   update_on_persian_date = nil,
                   device_type_brand_model_title = nil,
                   device_brand_ids = nil,
                   device_type_id = nil,
                   device_brand_id = nil,
                   updated_by = nil,
                   device_type_title = nil,
                   device_brand_title = nil,
                   device_brands_title = nil)
      @id = id
      @title = title
      @device_group = device_group
      @device_type_id = device_type_id
      @device_brand_id = device_brand_id
      @create_on = create_on
      @update_on = update_on
      @created_by = created_by
      @updated_by = updated_by
      @create_on_persian_date = create_on_persian_date
      @update_on_persian_date = update_on_persian_date
      @device_type_title = device_type_title
      @device_brand_title = device_brand_title
      @device_type_brand_model_title = device_type_brand_model_title
      @device_brand_ids = device_brand_ids
      @device_brands_title = device_brands_title
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash['id']
      title = hash['title']
      device_group = hash['deviceGroup']
      create_on = hash['createOn']
      update_on = hash['updateOn']
      created_by = hash['createdBy']
      create_on_persian_date = hash['createOnPersianDate']
      update_on_persian_date = hash['updateOnPersianDate']
      device_type_brand_model_title = hash['deviceTypeBrandModelTitle']
      device_brand_ids = hash['deviceBrandIds']
      device_type_id = hash['deviceTypeId']
      device_brand_id = hash['deviceBrandId']
      updated_by = hash['updatedBy']
      device_type_title = hash['deviceTypeTitle']
      device_brand_title = hash['deviceBrandTitle']
      device_brands_title = hash['deviceBrandsTitle']

      # Create object from extracted values.
      DeviceBrandTypes.new(id,
                           title,
                           device_group,
                           create_on,
                           update_on,
                           created_by,
                           create_on_persian_date,
                           update_on_persian_date,
                           device_type_brand_model_title,
                           device_brand_ids,
                           device_type_id,
                           device_brand_id,
                           updated_by,
                           device_type_title,
                           device_brand_title,
                           device_brands_title)
    end
  end
end
