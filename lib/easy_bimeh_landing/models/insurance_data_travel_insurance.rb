# easy_bimeh_landing
#
# This file was automatically generated by APIMATIC
# v2.0 ( https://apimatic.io ).

module EasyBimehLanding
  # InsuranceDataTravelInsurance Model.
  class InsuranceDataTravelInsurance < BaseModel
    # TODO: Write general description for this method
    # @return [TravelInsurancePolicyExtendView]
    attr_accessor :travel_insurance_policy_extend_view

    # TODO: Write general description for this method
    # @return [TravelInsurancePolicyFilter]
    attr_accessor :travel_insurance_policy_filter

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :selected_insurance_policy_has_been_changed

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :is_paymented

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :payable

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :paymented

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :conflict

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :has_conflict_document

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :initial_price

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :final_price

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :insurance_company_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :insurance_centre_name

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :is_insurance_centre_admin

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :insurance_policy_payment_documents

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :insurance_policy_conflict

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :insurance_policy_condition

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :person

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :insurance_policy

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :shopping_card

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :shopping_card_postal_packet

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['travel_insurance_policy_extend_view'] =
        'travelInsurancePolicyExtendView'
      @_hash['travel_insurance_policy_filter'] = 'travelInsurancePolicyFilter'
      @_hash['id'] = 'id'
      @_hash['selected_insurance_policy_has_been_changed'] =
        'selectedInsurancePolicyHasBeenChanged'
      @_hash['is_paymented'] = 'isPaymented'
      @_hash['payable'] = 'payable'
      @_hash['paymented'] = 'paymented'
      @_hash['conflict'] = 'conflict'
      @_hash['has_conflict_document'] = 'hasConflictDocument'
      @_hash['initial_price'] = 'initialPrice'
      @_hash['final_price'] = 'finalPrice'
      @_hash['insurance_company_name'] = 'insuranceCompanyName'
      @_hash['insurance_centre_name'] = 'insuranceCentreName'
      @_hash['is_insurance_centre_admin'] = 'isInsuranceCentreAdmin'
      @_hash['insurance_policy_payment_documents'] =
        'insurancePolicyPaymentDocuments'
      @_hash['insurance_policy_conflict'] = 'insurancePolicyConflict'
      @_hash['insurance_policy_condition'] = 'insurancePolicyCondition'
      @_hash['person'] = 'person'
      @_hash['insurance_policy'] = 'insurancePolicy'
      @_hash['shopping_card'] = 'shoppingCard'
      @_hash['shopping_card_postal_packet'] = 'shoppingCardPostalPacket'
      @_hash
    end

    def initialize(travel_insurance_policy_extend_view = nil,
                   travel_insurance_policy_filter = nil,
                   id = nil,
                   selected_insurance_policy_has_been_changed = nil,
                   is_paymented = nil,
                   has_conflict_document = nil,
                   is_insurance_centre_admin = nil,
                   insurance_policy_payment_documents = nil,
                   payable = nil,
                   paymented = nil,
                   conflict = nil,
                   initial_price = nil,
                   final_price = nil,
                   insurance_company_name = nil,
                   insurance_centre_name = nil,
                   insurance_policy_conflict = nil,
                   insurance_policy_condition = nil,
                   person = nil,
                   insurance_policy = nil,
                   shopping_card = nil,
                   shopping_card_postal_packet = nil)
      @travel_insurance_policy_extend_view =
        travel_insurance_policy_extend_view
      @travel_insurance_policy_filter = travel_insurance_policy_filter
      @id = id
      @selected_insurance_policy_has_been_changed =
        selected_insurance_policy_has_been_changed
      @is_paymented = is_paymented
      @payable = payable
      @paymented = paymented
      @conflict = conflict
      @has_conflict_document = has_conflict_document
      @initial_price = initial_price
      @final_price = final_price
      @insurance_company_name = insurance_company_name
      @insurance_centre_name = insurance_centre_name
      @is_insurance_centre_admin = is_insurance_centre_admin
      @insurance_policy_payment_documents = insurance_policy_payment_documents
      @insurance_policy_conflict = insurance_policy_conflict
      @insurance_policy_condition = insurance_policy_condition
      @person = person
      @insurance_policy = insurance_policy
      @shopping_card = shopping_card
      @shopping_card_postal_packet = shopping_card_postal_packet
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      if hash['travelInsurancePolicyExtendView']
        travel_insurance_policy_extend_view = TravelInsurancePolicyExtendView.from_hash(hash['travelInsurancePolicyExtendView'])
      end
      if hash['travelInsurancePolicyFilter']
        travel_insurance_policy_filter = TravelInsurancePolicyFilter.from_hash(hash['travelInsurancePolicyFilter'])
      end
      id = hash['id']
      selected_insurance_policy_has_been_changed =
        hash['selectedInsurancePolicyHasBeenChanged']
      is_paymented = hash['isPaymented']
      has_conflict_document = hash['hasConflictDocument']
      is_insurance_centre_admin = hash['isInsuranceCentreAdmin']
      insurance_policy_payment_documents =
        hash['insurancePolicyPaymentDocuments']
      payable = hash['payable']
      paymented = hash['paymented']
      conflict = hash['conflict']
      initial_price = hash['initialPrice']
      final_price = hash['finalPrice']
      insurance_company_name = hash['insuranceCompanyName']
      insurance_centre_name = hash['insuranceCentreName']
      insurance_policy_conflict = hash['insurancePolicyConflict']
      insurance_policy_condition = hash['insurancePolicyCondition']
      person = hash['person']
      insurance_policy = hash['insurancePolicy']
      shopping_card = hash['shoppingCard']
      shopping_card_postal_packet = hash['shoppingCardPostalPacket']

      # Create object from extracted values.
      InsuranceDataTravelInsurance.new(travel_insurance_policy_extend_view,
                                       travel_insurance_policy_filter,
                                       id,
                                       selected_insurance_policy_has_been_changed,
                                       is_paymented,
                                       has_conflict_document,
                                       is_insurance_centre_admin,
                                       insurance_policy_payment_documents,
                                       payable,
                                       paymented,
                                       conflict,
                                       initial_price,
                                       final_price,
                                       insurance_company_name,
                                       insurance_centre_name,
                                       insurance_policy_conflict,
                                       insurance_policy_condition,
                                       person,
                                       insurance_policy,
                                       shopping_card,
                                       shopping_card_postal_packet)
    end
  end
end
