# easy_bimeh_landing
#
# This file was automatically generated by APIMATIC
# v2.0 ( https://apimatic.io ).

module EasyBimehLanding
  # TravelInsurance Model.
  class TravelInsurance < BaseModel
    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :has_plan

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :is_saman_insurance

    # TODO: Write general description for this method
    # @return [List of Zone]
    attr_accessor :zones

    # TODO: Write general description for this method
    # @return [List of TravelDuration]
    attr_accessor :travel_durations

    # TODO: Write general description for this method
    # @return [List of TravelAge]
    attr_accessor :travel_ages

    # TODO: Write general description for this method
    # @return [List of Province]
    attr_accessor :provinces

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :cities

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :city_regions

    # TODO: Write general description for this method
    # @return [List of ShippingType]
    attr_accessor :shipping_types

    # TODO: Write general description for this method
    # @return [List of PostType]
    attr_accessor :post_types

    # TODO: Write general description for this method
    # @return [InsuranceDataTravelInsurance]
    attr_accessor :insurance_data

    # TODO: Write general description for this method
    # @return [InsurancePolicyCondition]
    attr_accessor :insurance_policy_condition

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['has_plan'] = 'hasPlan'
      @_hash['is_saman_insurance'] = 'isSamanInsurance'
      @_hash['zones'] = 'zones'
      @_hash['travel_durations'] = 'travelDurations'
      @_hash['travel_ages'] = 'travelAges'
      @_hash['provinces'] = 'provinces'
      @_hash['cities'] = 'cities'
      @_hash['city_regions'] = 'cityRegions'
      @_hash['shipping_types'] = 'shippingTypes'
      @_hash['post_types'] = 'postTypes'
      @_hash['insurance_data'] = 'insuranceData'
      @_hash['insurance_policy_condition'] = 'insurancePolicyCondition'
      @_hash
    end

    def initialize(has_plan = nil,
                   is_saman_insurance = nil,
                   zones = nil,
                   travel_durations = nil,
                   travel_ages = nil,
                   provinces = nil,
                   cities = nil,
                   city_regions = nil,
                   shipping_types = nil,
                   post_types = nil,
                   insurance_data = nil,
                   insurance_policy_condition = nil)
      @has_plan = has_plan
      @is_saman_insurance = is_saman_insurance
      @zones = zones
      @travel_durations = travel_durations
      @travel_ages = travel_ages
      @provinces = provinces
      @cities = cities
      @city_regions = city_regions
      @shipping_types = shipping_types
      @post_types = post_types
      @insurance_data = insurance_data
      @insurance_policy_condition = insurance_policy_condition
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      has_plan = hash['hasPlan']
      is_saman_insurance = hash['isSamanInsurance']
      # Parameter is an array, so we need to iterate through it
      zones = nil
      unless hash['zones'].nil?
        zones = []
        hash['zones'].each do |structure|
          zones << (Zone.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      travel_durations = nil
      unless hash['travelDurations'].nil?
        travel_durations = []
        hash['travelDurations'].each do |structure|
          travel_durations << (TravelDuration.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      travel_ages = nil
      unless hash['travelAges'].nil?
        travel_ages = []
        hash['travelAges'].each do |structure|
          travel_ages << (TravelAge.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      provinces = nil
      unless hash['provinces'].nil?
        provinces = []
        hash['provinces'].each do |structure|
          provinces << (Province.from_hash(structure) if structure)
        end
      end
      cities = hash['cities']
      city_regions = hash['cityRegions']
      # Parameter is an array, so we need to iterate through it
      shipping_types = nil
      unless hash['shippingTypes'].nil?
        shipping_types = []
        hash['shippingTypes'].each do |structure|
          shipping_types << (ShippingType.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      post_types = nil
      unless hash['postTypes'].nil?
        post_types = []
        hash['postTypes'].each do |structure|
          post_types << (PostType.from_hash(structure) if structure)
        end
      end
      if hash['insuranceData']
        insurance_data = InsuranceDataTravelInsurance.from_hash(hash['insuranceData'])
      end
      if hash['insurancePolicyCondition']
        insurance_policy_condition = InsurancePolicyCondition.from_hash(hash['insurancePolicyCondition'])
      end

      # Create object from extracted values.
      TravelInsurance.new(has_plan,
                          is_saman_insurance,
                          zones,
                          travel_durations,
                          travel_ages,
                          provinces,
                          cities,
                          city_regions,
                          shipping_types,
                          post_types,
                          insurance_data,
                          insurance_policy_condition)
    end
  end
end
