# easy_bimeh_landing
#
# This file was automatically generated by APIMATIC
# v2.0 ( https://apimatic.io ).

module EasyBimehLanding
  # ImageAlbum Model.
  class ImageAlbum < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :gallery_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :title

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :alt

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :description

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :is_active

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :is_main

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :is_attach_file

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :sort_priority

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :create_on_persian_date

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :meta_media_file_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :meta_media_file_url

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :meta_media_file_thumbnail_url

    # TODO: Write general description for this method
    # @return [List of PopupImageGalleryie]
    attr_accessor :popup_image_galleryies

    # TODO: Write general description for this method
    # @return [List of GalleryDetail]
    attr_accessor :gallery_details

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['gallery_type'] = 'galleryType'
      @_hash['title'] = 'title'
      @_hash['alt'] = 'alt'
      @_hash['description'] = 'description'
      @_hash['is_active'] = 'isActive'
      @_hash['is_main'] = 'isMain'
      @_hash['is_attach_file'] = 'isAttachFile'
      @_hash['sort_priority'] = 'sortPriority'
      @_hash['create_on_persian_date'] = 'createOnPersianDate'
      @_hash['meta_media_file_id'] = 'metaMediaFileId'
      @_hash['meta_media_file_url'] = 'metaMediaFileUrl'
      @_hash['meta_media_file_thumbnail_url'] = 'metaMediaFileThumbnailUrl'
      @_hash['popup_image_galleryies'] = 'popupImageGalleryies'
      @_hash['gallery_details'] = 'galleryDetails'
      @_hash
    end

    def initialize(id = nil,
                   gallery_type = nil,
                   title = nil,
                   is_active = nil,
                   is_main = nil,
                   is_attach_file = nil,
                   create_on_persian_date = nil,
                   meta_media_file_id = nil,
                   meta_media_file_url = nil,
                   meta_media_file_thumbnail_url = nil,
                   popup_image_galleryies = nil,
                   gallery_details = nil,
                   alt = nil,
                   description = nil,
                   sort_priority = nil)
      @id = id
      @gallery_type = gallery_type
      @title = title
      @alt = alt
      @description = description
      @is_active = is_active
      @is_main = is_main
      @is_attach_file = is_attach_file
      @sort_priority = sort_priority
      @create_on_persian_date = create_on_persian_date
      @meta_media_file_id = meta_media_file_id
      @meta_media_file_url = meta_media_file_url
      @meta_media_file_thumbnail_url = meta_media_file_thumbnail_url
      @popup_image_galleryies = popup_image_galleryies
      @gallery_details = gallery_details
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash['id']
      gallery_type = hash['galleryType']
      title = hash['title']
      is_active = hash['isActive']
      is_main = hash['isMain']
      is_attach_file = hash['isAttachFile']
      create_on_persian_date = hash['createOnPersianDate']
      meta_media_file_id = hash['metaMediaFileId']
      meta_media_file_url = hash['metaMediaFileUrl']
      meta_media_file_thumbnail_url = hash['metaMediaFileThumbnailUrl']
      # Parameter is an array, so we need to iterate through it
      popup_image_galleryies = nil
      unless hash['popupImageGalleryies'].nil?
        popup_image_galleryies = []
        hash['popupImageGalleryies'].each do |structure|
          popup_image_galleryies << (PopupImageGalleryie.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      gallery_details = nil
      unless hash['galleryDetails'].nil?
        gallery_details = []
        hash['galleryDetails'].each do |structure|
          gallery_details << (GalleryDetail.from_hash(structure) if structure)
        end
      end
      alt = hash['alt']
      description = hash['description']
      sort_priority = hash['sortPriority']

      # Create object from extracted values.
      ImageAlbum.new(id,
                     gallery_type,
                     title,
                     is_active,
                     is_main,
                     is_attach_file,
                     create_on_persian_date,
                     meta_media_file_id,
                     meta_media_file_url,
                     meta_media_file_thumbnail_url,
                     popup_image_galleryies,
                     gallery_details,
                     alt,
                     description,
                     sort_priority)
    end
  end
end
