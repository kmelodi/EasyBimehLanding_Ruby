# easy_bimeh_landing
#
# This file was automatically generated by APIMATIC
# v2.0 ( https://apimatic.io ).

module EasyBimehLanding
  # اطلاعات پایه ی بیمه ی تجهیزات
  class ElectronicEquipmentInsurance < BaseModel
    # آیا این نوع بیمه نامه، طرح بیمه ای دارد؟
    # @return [Boolean]
    attr_accessor :has_plan

    # لیست فرانشیز های بیمه ی تجهیزات الکترونیک
    # @return [List of Franchisee]
    attr_accessor :franchisees

    # انواع دستگاه ها
    # @return [List of DeviceType]
    attr_accessor :device_types

    # برند های دستگاه ها
    # @return [List of String]
    attr_accessor :device_brands

    # مدل های دستگاه ها
    # @return [List of String]
    attr_accessor :device_models

    # شرکت های بیمه ی ارائه دهنده ی بیمه ی تجهیزات الکترونیک
    # @return [List of InsuranceCompany]
    attr_accessor :insurance_companies

    # پوشش های اضافه
    # @return [List of String]
    attr_accessor :insurance_extra_coverage

    # دوره های بیمه نامه
    # @return [List of InsurancePolicyTerm]
    attr_accessor :insurance_policy_terms

    # لیست استان ها
    # @return [List of Province]
    attr_accessor :provinces

    # لیست شهر ها
    # @return [List of String]
    attr_accessor :cities

    # لیست محله ها
    # @return [List of String]
    attr_accessor :city_regions

    # روش های دریافت بیمه نامه
    # @return [List of ShippingType]
    attr_accessor :shipping_types

    # روش های ارسال بیمه نامه
    # @return [List of PostType]
    attr_accessor :post_types

    # شرایط بیمه نامه
    # @return [InsurancePolicyCondition]
    attr_accessor :insurance_policy_condition

    # اطلاعات بیمه نامه
    # @return [InsuranceData]
    attr_accessor :insurance_data

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['has_plan'] = 'hasPlan'
      @_hash['franchisees'] = 'franchisees'
      @_hash['device_types'] = 'deviceTypes'
      @_hash['device_brands'] = 'deviceBrands'
      @_hash['device_models'] = 'deviceModels'
      @_hash['insurance_companies'] = 'insuranceCompanies'
      @_hash['insurance_extra_coverage'] = 'insuranceExtraCoverage'
      @_hash['insurance_policy_terms'] = 'insurancePolicyTerms'
      @_hash['provinces'] = 'provinces'
      @_hash['cities'] = 'cities'
      @_hash['city_regions'] = 'cityRegions'
      @_hash['shipping_types'] = 'shippingTypes'
      @_hash['post_types'] = 'postTypes'
      @_hash['insurance_policy_condition'] = 'insurancePolicyCondition'
      @_hash['insurance_data'] = 'insuranceData'
      @_hash
    end

    def initialize(has_plan = nil,
                   franchisees = nil,
                   device_types = nil,
                   device_brands = nil,
                   device_models = nil,
                   insurance_companies = nil,
                   insurance_extra_coverage = nil,
                   insurance_policy_terms = nil,
                   provinces = nil,
                   cities = nil,
                   city_regions = nil,
                   shipping_types = nil,
                   post_types = nil,
                   insurance_policy_condition = nil,
                   insurance_data = nil)
      @has_plan = has_plan
      @franchisees = franchisees
      @device_types = device_types
      @device_brands = device_brands
      @device_models = device_models
      @insurance_companies = insurance_companies
      @insurance_extra_coverage = insurance_extra_coverage
      @insurance_policy_terms = insurance_policy_terms
      @provinces = provinces
      @cities = cities
      @city_regions = city_regions
      @shipping_types = shipping_types
      @post_types = post_types
      @insurance_policy_condition = insurance_policy_condition
      @insurance_data = insurance_data
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      has_plan = hash['hasPlan']
      # Parameter is an array, so we need to iterate through it
      franchisees = nil
      unless hash['franchisees'].nil?
        franchisees = []
        hash['franchisees'].each do |structure|
          franchisees << (Franchisee.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      device_types = nil
      unless hash['deviceTypes'].nil?
        device_types = []
        hash['deviceTypes'].each do |structure|
          device_types << (DeviceType.from_hash(structure) if structure)
        end
      end
      device_brands = hash['deviceBrands']
      device_models = hash['deviceModels']
      # Parameter is an array, so we need to iterate through it
      insurance_companies = nil
      unless hash['insuranceCompanies'].nil?
        insurance_companies = []
        hash['insuranceCompanies'].each do |structure|
          insurance_companies << (InsuranceCompany.from_hash(structure) if structure)
        end
      end
      insurance_extra_coverage = hash['insuranceExtraCoverage']
      # Parameter is an array, so we need to iterate through it
      insurance_policy_terms = nil
      unless hash['insurancePolicyTerms'].nil?
        insurance_policy_terms = []
        hash['insurancePolicyTerms'].each do |structure|
          insurance_policy_terms << (InsurancePolicyTerm.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      provinces = nil
      unless hash['provinces'].nil?
        provinces = []
        hash['provinces'].each do |structure|
          provinces << (Province.from_hash(structure) if structure)
        end
      end
      cities = hash['cities']
      city_regions = hash['cityRegions']
      # Parameter is an array, so we need to iterate through it
      shipping_types = nil
      unless hash['shippingTypes'].nil?
        shipping_types = []
        hash['shippingTypes'].each do |structure|
          shipping_types << (ShippingType.from_hash(structure) if structure)
        end
      end
      # Parameter is an array, so we need to iterate through it
      post_types = nil
      unless hash['postTypes'].nil?
        post_types = []
        hash['postTypes'].each do |structure|
          post_types << (PostType.from_hash(structure) if structure)
        end
      end
      if hash['insurancePolicyCondition']
        insurance_policy_condition = InsurancePolicyCondition.from_hash(hash['insurancePolicyCondition'])
      end
      insurance_data = InsuranceData.from_hash(hash['insuranceData']) if
        hash['insuranceData']

      # Create object from extracted values.
      ElectronicEquipmentInsurance.new(has_plan,
                                       franchisees,
                                       device_types,
                                       device_brands,
                                       device_models,
                                       insurance_companies,
                                       insurance_extra_coverage,
                                       insurance_policy_terms,
                                       provinces,
                                       cities,
                                       city_regions,
                                       shipping_types,
                                       post_types,
                                       insurance_policy_condition,
                                       insurance_data)
    end
  end
end
