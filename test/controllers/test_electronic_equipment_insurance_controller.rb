# easy_bimeh_landing
#
# This file was automatically generated by APIMATIC
# v2.0 ( https://apimatic.io ).

require_relative 'controller_test_base'

class ElectronicEquipmentInsuranceControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def self.startup
    self.controller = @@api_client.electronic_equipment_insurance
  end

  # TODO: Add Description
  def test_divice_franchisee()
    # Parameters for the API call
    device_model_id = 1340
    x_api_key = 'd6dfd932-75d8-e911-811a-000c294ecf01'

    # Perform the API call through the SDK function
    result = self.class.controller.get_divice_franchisee(device_model_id, x_api_key)

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test headers
    expected_headers = {}
    expected_headers['date'] = nil
    expected_headers['content-type'] = nil
    expected_headers['transfer-encoding'] = nil
    expected_headers['connection'] = nil
    expected_headers['keep-alive'] = nil
    expected_headers['vary'] = nil
    expected_headers['cache-control'] = nil
    expected_headers['pragma'] = nil
    expected_headers['expires'] = nil
    expected_headers['x-stackifyid'] = nil
    expected_headers['x-aspnet-version'] = nil
    expected_headers['x-powered-by'] = nil
    expected_headers['server'] = nil
    expected_headers['ar-poweredby'] = nil
    expected_headers['ar-sid'] = nil
    expected_headers['ar-atime'] = nil
    expected_headers['ar-cache'] = nil
    expected_headers['ar-request-id'] = nil
    expected_headers['content-encoding'] = nil

    assert(TestHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    expected_body = JSON.parse(
      '{"isSuccess":true,"status":200,"message":[{"id":5404,"title":"30%","extraD'\
      'ata":null},{"id":5401,"title":"40%","extraData":null}],"extraData":null,"ex'\
      'ception":null}'
      )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(TestHelper.match_body(expected_body, received_body))
  end

end
